=== BACKEND TEST COVERAGE ENHANCEMENT ===
Component: Backend (Node.js/TypeScript)
Task: Generate missing tests to improve code coverage
Current coverage: 23.86%
Target coverage: 80%
Framework: Bun Test + Elysia + Eden Treaty

COVERAGE GAPS TO ADDRESS:
- Create tests for untested API routes
- Add edge case scenarios
- Test error handling paths
- Add integration tests for API endpoints
- Test middleware and validation logic

UNCOVERED/LOW COVERAGE FILES:

EXISTING TEST PATTERNS (for reference):
Example test file: ../backend/test/status.test.ts
import { describe, expect, it } from 'bun:test'
import { Elysia } from 'elysia'

// Create a simple test version of status routes without external dependencies
const createTestStatusApp = () => {
  return new Elysia()
    .get('/health', () => ({
      status: 'healthy',
      timestamp: new Date().toISOString(),
      uptime: process.uptime()
    }))
    .get('/status', () => ({
      status: 'healthy',
      version: '0.0.1-test',
      timestamp: new Date().toISOString(),
      uptime: process.uptime(),
      services: {
        keycloak: 'unknown',
        fhir: 'unknown'
      }
---
Example test file: ../backend/test/auth.test.ts
import { describe, it, expect } from 'bun:test'
import { authRoutes } from '../src/routes/auth'

describe('Auth Routes', () => {
  it('should return auth config with keycloak info', async () => {
    const res = await authRoutes.handle(new Request('http://localhost/auth/config'))

    expect(res.status).toBe(200)
    expect(res.headers.get('content-type') || '').toContain('application/json')

    const data = await res.json()
    expect(data).toHaveProperty('keycloak')
    expect(data.keycloak).toHaveProperty('isConfigured')
    expect(typeof data.keycloak.isConfigured).toBe('boolean')

    if ('clientId' in data.keycloak && data.keycloak.clientId != null) {
      expect(typeof data.keycloak.clientId).toBe('string')
    }
  })

---
Example test file: ../backend/test/index.test.ts
import { describe, expect, it } from 'bun:test'
import { Elysia } from 'elysia'
import { treaty } from '@elysiajs/eden'

// Create a minimal test app similar to the main app
const createTestApp = () => {
  return new Elysia()
    .get('/', () => 'Proxy Smart Backend API')
    .get('/health', () => ({
      status: 'healthy',
      timestamp: new Date().toISOString(),
      uptime: process.uptime()
    }))
    .get('/hello', () => 'hi')
    .post('/echo', ({ body }) => body)
}

describe('Elysia Basic Tests', () => {
  const app = createTestApp()

---
