$ vitest --coverage "--reporter=verbose" "--reporter=json" "--outputFile=test-results.json"

[1m[46m RUN [49m[22m [36mv3.2.4 [39m[90m/home/runner/work/proxy-smart/proxy-smart/ui[39m
      [2mCoverage enabled with [22m[33mv8[39m

 [32m✓[39m test/components/theme-provider.behavior.test.tsx[2m > [22mThemeProvider behavior[2m > [22muses system preference (prefers-color-scheme) when no saved theme[32m 52[2mms[22m[39m
[90mstderr[2m | test/components/theme-provider.system-preference.test.tsx[2m > [22m[2mThemeProvider system preference behavior[2m > [22m[2mapplies system dark preference and updates when OS preference changes
[22m[39mAn update to ThemeProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to ThemeProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 [32m✓[39m test/components/theme-provider.behavior.test.tsx[2m > [22mThemeProvider behavior[2m > [22mpersists theme to localStorage and rehydrates on remount[32m 97[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.domclass.extra.test.tsx[2m > [22mThemeProvider DOM class toggling (extra)[2m > [22madds the dark class on documentElement when theme set to dark and removes it when set to light[32m 167[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.domclass.extra.test.tsx[2m > [22mThemeProvider DOM class toggling (extra)[2m > [22mrespects system preference when setting theme to system[32m 19[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.system-preference.test.tsx[2m > [22mThemeProvider system preference behavior[2m > [22mapplies system dark preference and updates when OS preference changes[32m 159[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.system-preference.test.tsx[2m > [22mThemeProvider system preference behavior[2m > [22mrespects explicit user override even if system preference is dark[32m 30[2mms[22m[39m
 [32m✓[39m test/components/button.test.tsx[2m > [22mButton[2m > [22mrenders with default props[32m 131[2mms[22m[39m
 [32m✓[39m test/components/button.test.tsx[2m > [22mButton[2m > [22mrenders with different variants[32m 28[2mms[22m[39m
 [32m✓[39m test/components/button.test.tsx[2m > [22mButton[2m > [22mrenders with different sizes[32m 21[2mms[22m[39m
 [32m✓[39m test/components/button.test.tsx[2m > [22mButton[2m > [22mhandles click events[32m 40[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.domclass.test.tsx[2m > [22mThemeProvider DOM class toggling[2m > [22madds and removes the dark class on documentElement when toggling themes[32m 145[2mms[22m[39m
 [32m✓[39m test/components/button.test.tsx[2m > [22mButton[2m > [22mcan be disabled[32m 10[2mms[22m[39m
 [32m✓[39m test/components/button.test.tsx[2m > [22mButton[2m > [22mrenders as child when asChild is true[32m 10[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.extra.test.tsx[2m > [22mThemeProvider integration[2m > [22mpersists theme to storage and toggles DOM class when setTheme is called[32m 185[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.extra.test.tsx[2m > [22mThemeProvider integration[2m > [22msystem theme follows prefers-color-scheme and stores "system"[32m 21[2mms[22m[39m
 [32m✓[39m test/components/input.extra.test.tsx[2m > [22mInput (extra)[2m > [22mupdates value on typing[32m 159[2mms[22m[39m
 [32m✓[39m test/components/input.extra.test.tsx[2m > [22mInput (extra)[2m > [22mdoes not accept input when disabled[32m 5[2mms[22m[39m
 [31m×[39m test/hooks/useTheme.inside-provider.test.tsx[2m > [22museTheme (inside ThemeProvider)[2m > [22mprovides theme and updates when setTheme is called[32m 216[2mms[22m[39m
[31m   → [2mexpect([22m[31melement[31m[2m).toHaveTextContent()[22m

Expected element to have text content:
[32m  system[31m
Received:
[31m  light[31m[39m
 [32m✓[39m test/components/input.test.tsx[2m > [22mInput[2m > [22mrenders an input with provided placeholder and type[32m 49[2mms[22m[39m
 [32m✓[39m test/components/input.test.tsx[2m > [22mInput[2m > [22maccepts className and forwards props[32m 5[2mms[22m[39m
 [32m✓[39m test/components/input.test.tsx[2m > [22mInput[2m > [22mcalls onChange when user types and updates value[32m 99[2mms[22m[39m
 [32m✓[39m test/components/input.test.tsx[2m > [22mInput[2m > [22mforwards ref to the input element[32m 4[2mms[22m[39m
 [32m✓[39m test/hooks/useTheme.integration.test.tsx[2m > [22museTheme integration[2m > [22mthrows when used outside of ThemeProvider[32m 18[2mms[22m[39m
 [32m✓[39m test/hooks/useTheme.integration.test.tsx[2m > [22museTheme integration[2m > [22mworks inside ThemeProvider and exposes API[32m 23[2mms[22m[39m
 [32m✓[39m test/hooks/useTheme.outside-provider.test.tsx[2m > [22museTheme[2m > [22mthrows when used outside of ThemeProvider[32m 27[2mms[22m[39m
 [32m✓[39m test/components/theme-provider.test.tsx[2m > [22mThemeProvider[2m > [22minitializes with defaultTheme and updates DOM and storage when setTheme is called[32m 149[2mms[22m[39m
 [32m✓[39m test/lib/utils.test.ts[2m > [22mlib/utils - cn[2m > [22mreturns a space-separated string containing provided classes[32m 12[2mms[22m[39m
 [32m✓[39m test/lib/utils.test.ts[2m > [22mlib/utils - cn[2m > [22mignores falsy values and merges conditional classes[32m 1[2mms[22m[39m
 [32m✓[39m test/components/textarea.test.tsx[2m > [22mTextarea[2m > [22mrenders textarea with placeholder and className[32m 34[2mms[22m[39m
 [32m✓[39m test/components/textarea.test.tsx[2m > [22mTextarea[2m > [22mforwards ref to the textarea element[32m 3[2mms[22m[39m
 [32m✓[39m test/components/button.extra.test.tsx[2m > [22mButton (extra)[2m > [22mcalls onClick when enabled[32m 156[2mms[22m[39m
 [32m✓[39m test/components/button.extra.test.tsx[2m > [22mButton (extra)[2m > [22mdoes not call onClick when disabled[32m 22[2mms[22m[39m

[31m⎯⎯⎯⎯⎯⎯⎯[39m[1m[41m Failed Tests 1 [49m[22m[31m⎯⎯⎯⎯⎯⎯⎯[39m

[41m[1m FAIL [22m[49m test/hooks/useTheme.inside-provider.test.tsx[2m > [22museTheme (inside ThemeProvider)[2m > [22mprovides theme and updates when setTheme is called
[31m[1mError[22m: [2mexpect([22m[31melement[31m[2m).toHaveTextContent()[22m

Expected element to have text content:
[32m  system[31m
Received:
[31m  light[31m[39m
[36m [2m❯[22m test/hooks/useTheme.inside-provider.test.tsx:[2m42:23[22m[39m
    [90m 40| [39m
    [90m 41| [39m    await user.click(screen.getByRole('button', { name: /Set System/i …
    [90m 42| [39m    [34mexpect[39m(themeNode)[33m.[39m[34mtoHaveTextContent[39m([32m'system'[39m)
    [90m   | [39m                      [31m^[39m
    [90m 43| [39m
    [90m 44| [39m    // Removed brittle assertion that final theme must differ from ini…

[31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯[22m[39m


[2m Test Files [22m [1m[31m1 failed[39m[22m[2m | [22m[1m[32m14 passed[39m[22m[90m (15)[39m
[2m      Tests [22m [1m[31m1 failed[39m[22m[2m | [22m[1m[32m31 passed[39m[22m[90m (32)[39m
[2m   Start at [22m 11:26:13
[2m   Duration [22m 8.54s[2m (transform 215ms, setup 3.56s, collect 1.43s, tests 2.13s, environment 9.12s, prepare 2.02s)[22m

JSON report written to /home/runner/work/proxy-smart/proxy-smart/ui/test-results.json
error: script "test:coverage" exited with code 1
