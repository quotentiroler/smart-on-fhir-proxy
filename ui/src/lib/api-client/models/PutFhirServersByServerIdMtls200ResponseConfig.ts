/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetFhirServersByServerIdMtls200ResponseHasCertificates } from './GetFhirServersByServerIdMtls200ResponseHasCertificates';
import {
    GetFhirServersByServerIdMtls200ResponseHasCertificatesFromJSON,
    GetFhirServersByServerIdMtls200ResponseHasCertificatesFromJSONTyped,
    GetFhirServersByServerIdMtls200ResponseHasCertificatesToJSON,
    GetFhirServersByServerIdMtls200ResponseHasCertificatesToJSONTyped,
} from './GetFhirServersByServerIdMtls200ResponseHasCertificates';

/**
 * 
 * @export
 * @interface PutFhirServersByServerIdMtls200ResponseConfig
 */
export interface PutFhirServersByServerIdMtls200ResponseConfig {
    /**
     * Whether mTLS is enabled
     * @type {boolean}
     * @memberof PutFhirServersByServerIdMtls200ResponseConfig
     */
    enabled: boolean;
    /**
     * 
     * @type {GetFhirServersByServerIdMtls200ResponseHasCertificates}
     * @memberof PutFhirServersByServerIdMtls200ResponseConfig
     */
    hasCertificates: GetFhirServersByServerIdMtls200ResponseHasCertificates;
}

/**
 * Check if a given object implements the PutFhirServersByServerIdMtls200ResponseConfig interface.
 */
export function instanceOfPutFhirServersByServerIdMtls200ResponseConfig(value: object): value is PutFhirServersByServerIdMtls200ResponseConfig {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('hasCertificates' in value) || value['hasCertificates'] === undefined) return false;
    return true;
}

export function PutFhirServersByServerIdMtls200ResponseConfigFromJSON(json: any): PutFhirServersByServerIdMtls200ResponseConfig {
    return PutFhirServersByServerIdMtls200ResponseConfigFromJSONTyped(json, false);
}

export function PutFhirServersByServerIdMtls200ResponseConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutFhirServersByServerIdMtls200ResponseConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'hasCertificates': GetFhirServersByServerIdMtls200ResponseHasCertificatesFromJSON(json['hasCertificates']),
    };
}

export function PutFhirServersByServerIdMtls200ResponseConfigToJSON(json: any): PutFhirServersByServerIdMtls200ResponseConfig {
    return PutFhirServersByServerIdMtls200ResponseConfigToJSONTyped(json, false);
}

export function PutFhirServersByServerIdMtls200ResponseConfigToJSONTyped(value?: PutFhirServersByServerIdMtls200ResponseConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'hasCertificates': GetFhirServersByServerIdMtls200ResponseHasCertificatesToJSON(value['hasCertificates']),
    };
}

