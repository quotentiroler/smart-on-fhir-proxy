/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetAdminHealthcareUsers200ResponseInner
 */
export interface GetAdminHealthcareUsers200ResponseInner {
    /**
     * User ID
     * @type {string}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    id: string;
    /**
     * Username
     * @type {string}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    username: string;
    /**
     * Email address
     * @type {string}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    email: string;
    /**
     * First name
     * @type {string}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    firstName: string;
    /**
     * Last name
     * @type {string}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    lastName: string;
    /**
     * Whether user is enabled
     * @type {boolean}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    enabled: boolean;
    /**
     * 
     * @type {object}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    attributes?: object;
    /**
     * Creation timestamp
     * @type {number}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    createdTimestamp?: number;
    /**
     * 
     * @type {number}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    lastLogin?: number | null;
    /**
     * Keycloak realm roles
     * @type {Array<string>}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    realmRoles?: Array<string>;
    /**
     * Keycloak client roles
     * @type {object}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    clientRoles?: object;
    /**
     * Organization
     * @type {string}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    organization?: string;
    /**
     * FHIR User identifier
     * @type {string}
     * @memberof GetAdminHealthcareUsers200ResponseInner
     */
    fhirUser?: string;
}

/**
 * Check if a given object implements the GetAdminHealthcareUsers200ResponseInner interface.
 */
export function instanceOfGetAdminHealthcareUsers200ResponseInner(value: object): value is GetAdminHealthcareUsers200ResponseInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    return true;
}

export function GetAdminHealthcareUsers200ResponseInnerFromJSON(json: any): GetAdminHealthcareUsers200ResponseInner {
    return GetAdminHealthcareUsers200ResponseInnerFromJSONTyped(json, false);
}

export function GetAdminHealthcareUsers200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAdminHealthcareUsers200ResponseInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'email': json['email'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'enabled': json['enabled'],
        'attributes': json['attributes'] == null ? undefined : json['attributes'],
        'createdTimestamp': json['createdTimestamp'] == null ? undefined : json['createdTimestamp'],
        'lastLogin': json['lastLogin'] == null ? undefined : json['lastLogin'],
        'realmRoles': json['realmRoles'] == null ? undefined : json['realmRoles'],
        'clientRoles': json['clientRoles'] == null ? undefined : json['clientRoles'],
        'organization': json['organization'] == null ? undefined : json['organization'],
        'fhirUser': json['fhirUser'] == null ? undefined : json['fhirUser'],
    };
}

export function GetAdminHealthcareUsers200ResponseInnerToJSON(json: any): GetAdminHealthcareUsers200ResponseInner {
    return GetAdminHealthcareUsers200ResponseInnerToJSONTyped(json, false);
}

export function GetAdminHealthcareUsers200ResponseInnerToJSONTyped(value?: GetAdminHealthcareUsers200ResponseInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'username': value['username'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'enabled': value['enabled'],
        'attributes': value['attributes'],
        'createdTimestamp': value['createdTimestamp'],
        'lastLogin': value['lastLogin'],
        'realmRoles': value['realmRoles'],
        'clientRoles': value['clientRoles'],
        'organization': value['organization'],
        'fhirUser': value['fhirUser'],
    };
}

