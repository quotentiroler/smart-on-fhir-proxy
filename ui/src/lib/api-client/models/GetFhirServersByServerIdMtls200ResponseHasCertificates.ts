/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetFhirServersByServerIdMtls200ResponseHasCertificates
 */
export interface GetFhirServersByServerIdMtls200ResponseHasCertificates {
    /**
     * Whether client certificate is uploaded
     * @type {boolean}
     * @memberof GetFhirServersByServerIdMtls200ResponseHasCertificates
     */
    clientCert: boolean;
    /**
     * Whether client private key is uploaded
     * @type {boolean}
     * @memberof GetFhirServersByServerIdMtls200ResponseHasCertificates
     */
    clientKey: boolean;
    /**
     * Whether CA certificate is uploaded
     * @type {boolean}
     * @memberof GetFhirServersByServerIdMtls200ResponseHasCertificates
     */
    caCert: boolean;
}

/**
 * Check if a given object implements the GetFhirServersByServerIdMtls200ResponseHasCertificates interface.
 */
export function instanceOfGetFhirServersByServerIdMtls200ResponseHasCertificates(value: object): value is GetFhirServersByServerIdMtls200ResponseHasCertificates {
    if (!('clientCert' in value) || value['clientCert'] === undefined) return false;
    if (!('clientKey' in value) || value['clientKey'] === undefined) return false;
    if (!('caCert' in value) || value['caCert'] === undefined) return false;
    return true;
}

export function GetFhirServersByServerIdMtls200ResponseHasCertificatesFromJSON(json: any): GetFhirServersByServerIdMtls200ResponseHasCertificates {
    return GetFhirServersByServerIdMtls200ResponseHasCertificatesFromJSONTyped(json, false);
}

export function GetFhirServersByServerIdMtls200ResponseHasCertificatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetFhirServersByServerIdMtls200ResponseHasCertificates {
    if (json == null) {
        return json;
    }
    return {
        
        'clientCert': json['clientCert'],
        'clientKey': json['clientKey'],
        'caCert': json['caCert'],
    };
}

export function GetFhirServersByServerIdMtls200ResponseHasCertificatesToJSON(json: any): GetFhirServersByServerIdMtls200ResponseHasCertificates {
    return GetFhirServersByServerIdMtls200ResponseHasCertificatesToJSONTyped(json, false);
}

export function GetFhirServersByServerIdMtls200ResponseHasCertificatesToJSONTyped(value?: GetFhirServersByServerIdMtls200ResponseHasCertificates | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clientCert': value['clientCert'],
        'clientKey': value['clientKey'],
        'caCert': value['caCert'],
    };
}

