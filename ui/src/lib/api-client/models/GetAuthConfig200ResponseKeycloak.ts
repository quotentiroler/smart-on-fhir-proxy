/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetAuthConfig200ResponseKeycloak
 */
export interface GetAuthConfig200ResponseKeycloak {
    /**
     * 
     * @type {boolean}
     * @memberof GetAuthConfig200ResponseKeycloak
     */
    isConfigured: boolean;
    /**
     * 
     * @type {string}
     * @memberof GetAuthConfig200ResponseKeycloak
     */
    baseUrl: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetAuthConfig200ResponseKeycloak
     */
    realm: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetAuthConfig200ResponseKeycloak
     */
    authorizationEndpoint: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetAuthConfig200ResponseKeycloak
     */
    tokenEndpoint: string | null;
}

/**
 * Check if a given object implements the GetAuthConfig200ResponseKeycloak interface.
 */
export function instanceOfGetAuthConfig200ResponseKeycloak(value: object): value is GetAuthConfig200ResponseKeycloak {
    if (!('isConfigured' in value) || value['isConfigured'] === undefined) return false;
    if (!('baseUrl' in value) || value['baseUrl'] === undefined) return false;
    if (!('realm' in value) || value['realm'] === undefined) return false;
    if (!('authorizationEndpoint' in value) || value['authorizationEndpoint'] === undefined) return false;
    if (!('tokenEndpoint' in value) || value['tokenEndpoint'] === undefined) return false;
    return true;
}

export function GetAuthConfig200ResponseKeycloakFromJSON(json: any): GetAuthConfig200ResponseKeycloak {
    return GetAuthConfig200ResponseKeycloakFromJSONTyped(json, false);
}

export function GetAuthConfig200ResponseKeycloakFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAuthConfig200ResponseKeycloak {
    if (json == null) {
        return json;
    }
    return {
        
        'isConfigured': json['isConfigured'],
        'baseUrl': json['baseUrl'],
        'realm': json['realm'],
        'authorizationEndpoint': json['authorizationEndpoint'],
        'tokenEndpoint': json['tokenEndpoint'],
    };
}

export function GetAuthConfig200ResponseKeycloakToJSON(json: any): GetAuthConfig200ResponseKeycloak {
    return GetAuthConfig200ResponseKeycloakToJSONTyped(json, false);
}

export function GetAuthConfig200ResponseKeycloakToJSONTyped(value?: GetAuthConfig200ResponseKeycloak | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'isConfigured': value['isConfigured'],
        'baseUrl': value['baseUrl'],
        'realm': value['realm'],
        'authorizationEndpoint': value['authorizationEndpoint'],
        'tokenEndpoint': value['tokenEndpoint'],
    };
}

