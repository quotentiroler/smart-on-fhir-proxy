/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PutAdminHealthcareUsersByUserIdRequest
 */
export interface PutAdminHealthcareUsersByUserIdRequest {
    /**
     * First name
     * @type {string}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    firstName?: string;
    /**
     * Last name
     * @type {string}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    lastName?: string;
    /**
     * Email address
     * @type {string}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    email?: string;
    /**
     * Whether user is enabled
     * @type {boolean}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    enabled?: boolean;
    /**
     * Organization
     * @type {string}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    organization?: string;
    /**
     * FHIR User identifiers in format "server1:Person/123,server2:Person/456"
     * @type {string}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    fhirUser?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    realmRoles?: Array<string>;
    /**
     * Client roles to assign
     * @type {object}
     * @memberof PutAdminHealthcareUsersByUserIdRequest
     */
    clientRoles?: object;
}

/**
 * Check if a given object implements the PutAdminHealthcareUsersByUserIdRequest interface.
 */
export function instanceOfPutAdminHealthcareUsersByUserIdRequest(value: object): value is PutAdminHealthcareUsersByUserIdRequest {
    return true;
}

export function PutAdminHealthcareUsersByUserIdRequestFromJSON(json: any): PutAdminHealthcareUsersByUserIdRequest {
    return PutAdminHealthcareUsersByUserIdRequestFromJSONTyped(json, false);
}

export function PutAdminHealthcareUsersByUserIdRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutAdminHealthcareUsersByUserIdRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'email': json['email'] == null ? undefined : json['email'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'organization': json['organization'] == null ? undefined : json['organization'],
        'fhirUser': json['fhirUser'] == null ? undefined : json['fhirUser'],
        'realmRoles': json['realmRoles'] == null ? undefined : json['realmRoles'],
        'clientRoles': json['clientRoles'] == null ? undefined : json['clientRoles'],
    };
}

export function PutAdminHealthcareUsersByUserIdRequestToJSON(json: any): PutAdminHealthcareUsersByUserIdRequest {
    return PutAdminHealthcareUsersByUserIdRequestToJSONTyped(json, false);
}

export function PutAdminHealthcareUsersByUserIdRequestToJSONTyped(value?: PutAdminHealthcareUsersByUserIdRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'enabled': value['enabled'],
        'organization': value['organization'],
        'fhirUser': value['fhirUser'],
        'realmRoles': value['realmRoles'],
        'clientRoles': value['clientRoles'],
    };
}

