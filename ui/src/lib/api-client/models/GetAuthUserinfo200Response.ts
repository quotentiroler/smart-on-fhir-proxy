/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetAuthUserinfo200ResponseNameInner } from './GetAuthUserinfo200ResponseNameInner';
import {
    GetAuthUserinfo200ResponseNameInnerFromJSON,
    GetAuthUserinfo200ResponseNameInnerFromJSONTyped,
    GetAuthUserinfo200ResponseNameInnerToJSON,
    GetAuthUserinfo200ResponseNameInnerToJSONTyped,
} from './GetAuthUserinfo200ResponseNameInner';

/**
 * 
 * @export
 * @interface GetAuthUserinfo200Response
 */
export interface GetAuthUserinfo200Response {
    /**
     * User ID
     * @type {string}
     * @memberof GetAuthUserinfo200Response
     */
    id: string;
    /**
     * FHIR user resource reference (e.g., Practitioner/123)
     * @type {string}
     * @memberof GetAuthUserinfo200Response
     */
    fhirUser?: string;
    /**
     * 
     * @type {Array<GetAuthUserinfo200ResponseNameInner>}
     * @memberof GetAuthUserinfo200Response
     */
    name: Array<GetAuthUserinfo200ResponseNameInner>;
    /**
     * Username
     * @type {string}
     * @memberof GetAuthUserinfo200Response
     */
    username: string;
    /**
     * Email address
     * @type {string}
     * @memberof GetAuthUserinfo200Response
     */
    email?: string;
    /**
     * First name
     * @type {string}
     * @memberof GetAuthUserinfo200Response
     */
    firstName?: string;
    /**
     * Last name
     * @type {string}
     * @memberof GetAuthUserinfo200Response
     */
    lastName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetAuthUserinfo200Response
     */
    roles: Array<string>;
}

/**
 * Check if a given object implements the GetAuthUserinfo200Response interface.
 */
export function instanceOfGetAuthUserinfo200Response(value: object): value is GetAuthUserinfo200Response {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('roles' in value) || value['roles'] === undefined) return false;
    return true;
}

export function GetAuthUserinfo200ResponseFromJSON(json: any): GetAuthUserinfo200Response {
    return GetAuthUserinfo200ResponseFromJSONTyped(json, false);
}

export function GetAuthUserinfo200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAuthUserinfo200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fhirUser': json['fhirUser'] == null ? undefined : json['fhirUser'],
        'name': ((json['name'] as Array<any>).map(GetAuthUserinfo200ResponseNameInnerFromJSON)),
        'username': json['username'],
        'email': json['email'] == null ? undefined : json['email'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'roles': json['roles'],
    };
}

export function GetAuthUserinfo200ResponseToJSON(json: any): GetAuthUserinfo200Response {
    return GetAuthUserinfo200ResponseToJSONTyped(json, false);
}

export function GetAuthUserinfo200ResponseToJSONTyped(value?: GetAuthUserinfo200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fhirUser': value['fhirUser'],
        'name': ((value['name'] as Array<any>).map(GetAuthUserinfo200ResponseNameInnerToJSON)),
        'username': value['username'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'roles': value['roles'],
    };
}

