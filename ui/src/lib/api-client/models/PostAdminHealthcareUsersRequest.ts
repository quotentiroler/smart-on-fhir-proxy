/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAdminHealthcareUsersRequest
 */
export interface PostAdminHealthcareUsersRequest {
    /**
     * Unique username
     * @type {string}
     * @memberof PostAdminHealthcareUsersRequest
     */
    username: string;
    /**
     * Email address
     * @type {string}
     * @memberof PostAdminHealthcareUsersRequest
     */
    email: string;
    /**
     * First name
     * @type {string}
     * @memberof PostAdminHealthcareUsersRequest
     */
    firstName: string;
    /**
     * Last name
     * @type {string}
     * @memberof PostAdminHealthcareUsersRequest
     */
    lastName: string;
    /**
     * Organization
     * @type {string}
     * @memberof PostAdminHealthcareUsersRequest
     */
    organization?: string;
    /**
     * FHIR User identifiers in format "server1:Person/123,server2:Person/456"
     * @type {string}
     * @memberof PostAdminHealthcareUsersRequest
     */
    fhirUser?: string;
    /**
     * Initial password
     * @type {string}
     * @memberof PostAdminHealthcareUsersRequest
     */
    password?: string;
    /**
     * Whether password is temporary
     * @type {boolean}
     * @memberof PostAdminHealthcareUsersRequest
     */
    temporaryPassword?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAdminHealthcareUsersRequest
     */
    realmRoles?: Array<string>;
    /**
     * Client roles to assign
     * @type {object}
     * @memberof PostAdminHealthcareUsersRequest
     */
    clientRoles?: object;
}

/**
 * Check if a given object implements the PostAdminHealthcareUsersRequest interface.
 */
export function instanceOfPostAdminHealthcareUsersRequest(value: object): value is PostAdminHealthcareUsersRequest {
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    return true;
}

export function PostAdminHealthcareUsersRequestFromJSON(json: any): PostAdminHealthcareUsersRequest {
    return PostAdminHealthcareUsersRequestFromJSONTyped(json, false);
}

export function PostAdminHealthcareUsersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAdminHealthcareUsersRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'],
        'email': json['email'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'organization': json['organization'] == null ? undefined : json['organization'],
        'fhirUser': json['fhirUser'] == null ? undefined : json['fhirUser'],
        'password': json['password'] == null ? undefined : json['password'],
        'temporaryPassword': json['temporaryPassword'] == null ? undefined : json['temporaryPassword'],
        'realmRoles': json['realmRoles'] == null ? undefined : json['realmRoles'],
        'clientRoles': json['clientRoles'] == null ? undefined : json['clientRoles'],
    };
}

export function PostAdminHealthcareUsersRequestToJSON(json: any): PostAdminHealthcareUsersRequest {
    return PostAdminHealthcareUsersRequestToJSONTyped(json, false);
}

export function PostAdminHealthcareUsersRequestToJSONTyped(value?: PostAdminHealthcareUsersRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'email': value['email'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'organization': value['organization'],
        'fhirUser': value['fhirUser'],
        'password': value['password'],
        'temporaryPassword': value['temporaryPassword'],
        'realmRoles': value['realmRoles'],
        'clientRoles': value['clientRoles'],
    };
}

