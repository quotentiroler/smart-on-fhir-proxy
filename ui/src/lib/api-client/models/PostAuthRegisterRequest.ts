/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAuthRegisterRequest
 */
export interface PostAuthRegisterRequest {
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAuthRegisterRequest
     */
    redirectUris: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    clientName?: string;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    clientUri?: string;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    logoUri?: string;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    scope?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAuthRegisterRequest
     */
    contacts?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    tosUri?: string;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    policyUri?: string;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    jwksUri?: string;
    /**
     * 
     * @type {object}
     * @memberof PostAuthRegisterRequest
     */
    jwks?: object;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    softwareId?: string;
    /**
     * 
     * @type {string}
     * @memberof PostAuthRegisterRequest
     */
    softwareVersion?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAuthRegisterRequest
     */
    fhirVersions?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAuthRegisterRequest
     */
    launchUris?: Array<string>;
}

/**
 * Check if a given object implements the PostAuthRegisterRequest interface.
 */
export function instanceOfPostAuthRegisterRequest(value: object): value is PostAuthRegisterRequest {
    if (!('redirectUris' in value) || value['redirectUris'] === undefined) return false;
    return true;
}

export function PostAuthRegisterRequestFromJSON(json: any): PostAuthRegisterRequest {
    return PostAuthRegisterRequestFromJSONTyped(json, false);
}

export function PostAuthRegisterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAuthRegisterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'redirectUris': json['redirect_uris'],
        'clientName': json['client_name'] == null ? undefined : json['client_name'],
        'clientUri': json['client_uri'] == null ? undefined : json['client_uri'],
        'logoUri': json['logo_uri'] == null ? undefined : json['logo_uri'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'contacts': json['contacts'] == null ? undefined : json['contacts'],
        'tosUri': json['tos_uri'] == null ? undefined : json['tos_uri'],
        'policyUri': json['policy_uri'] == null ? undefined : json['policy_uri'],
        'jwksUri': json['jwks_uri'] == null ? undefined : json['jwks_uri'],
        'jwks': json['jwks'] == null ? undefined : json['jwks'],
        'softwareId': json['software_id'] == null ? undefined : json['software_id'],
        'softwareVersion': json['software_version'] == null ? undefined : json['software_version'],
        'fhirVersions': json['fhir_versions'] == null ? undefined : json['fhir_versions'],
        'launchUris': json['launch_uris'] == null ? undefined : json['launch_uris'],
    };
}

export function PostAuthRegisterRequestToJSON(json: any): PostAuthRegisterRequest {
    return PostAuthRegisterRequestToJSONTyped(json, false);
}

export function PostAuthRegisterRequestToJSONTyped(value?: PostAuthRegisterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'redirect_uris': value['redirectUris'],
        'client_name': value['clientName'],
        'client_uri': value['clientUri'],
        'logo_uri': value['logoUri'],
        'scope': value['scope'],
        'contacts': value['contacts'],
        'tos_uri': value['tosUri'],
        'policy_uri': value['policyUri'],
        'jwks_uri': value['jwksUri'],
        'jwks': value['jwks'],
        'software_id': value['softwareId'],
        'software_version': value['softwareVersion'],
        'fhir_versions': value['fhirVersions'],
        'launch_uris': value['launchUris'],
    };
}

