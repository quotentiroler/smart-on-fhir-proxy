/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAdminLaunchContextsByUserIdFhirContextRequest
 */
export interface PostAdminLaunchContextsByUserIdFhirContextRequest {
    /**
     * Additional FHIR resources in context (JSON array of objects)
     * @type {string}
     * @memberof PostAdminLaunchContextsByUserIdFhirContextRequest
     */
    fhirContext: string;
}

/**
 * Check if a given object implements the PostAdminLaunchContextsByUserIdFhirContextRequest interface.
 */
export function instanceOfPostAdminLaunchContextsByUserIdFhirContextRequest(value: object): value is PostAdminLaunchContextsByUserIdFhirContextRequest {
    if (!('fhirContext' in value) || value['fhirContext'] === undefined) return false;
    return true;
}

export function PostAdminLaunchContextsByUserIdFhirContextRequestFromJSON(json: any): PostAdminLaunchContextsByUserIdFhirContextRequest {
    return PostAdminLaunchContextsByUserIdFhirContextRequestFromJSONTyped(json, false);
}

export function PostAdminLaunchContextsByUserIdFhirContextRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAdminLaunchContextsByUserIdFhirContextRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'fhirContext': json['fhirContext'],
    };
}

export function PostAdminLaunchContextsByUserIdFhirContextRequestToJSON(json: any): PostAdminLaunchContextsByUserIdFhirContextRequest {
    return PostAdminLaunchContextsByUserIdFhirContextRequestToJSONTyped(json, false);
}

export function PostAdminLaunchContextsByUserIdFhirContextRequestToJSONTyped(value?: PostAdminLaunchContextsByUserIdFhirContextRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fhirContext': value['fhirContext'],
    };
}

