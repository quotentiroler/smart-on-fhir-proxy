/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FhirServer } from './FhirServer';
import {
    FhirServerFromJSON,
    FhirServerFromJSONTyped,
    FhirServerToJSON,
    FhirServerToJSONTyped,
} from './FhirServer';

/**
 * 
 * @export
 * @interface PostFhirServers200Response
 */
export interface PostFhirServers200Response {
    /**
     * Whether the server was added successfully
     * @type {boolean}
     * @memberof PostFhirServers200Response
     */
    success: boolean;
    /**
     * Success message
     * @type {string}
     * @memberof PostFhirServers200Response
     */
    message: string;
    /**
     * 
     * @type {FhirServer}
     * @memberof PostFhirServers200Response
     */
    server: FhirServer;
}

/**
 * Check if a given object implements the PostFhirServers200Response interface.
 */
export function instanceOfPostFhirServers200Response(value: object): value is PostFhirServers200Response {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('server' in value) || value['server'] === undefined) return false;
    return true;
}

export function PostFhirServers200ResponseFromJSON(json: any): PostFhirServers200Response {
    return PostFhirServers200ResponseFromJSONTyped(json, false);
}

export function PostFhirServers200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostFhirServers200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'message': json['message'],
        'server': FhirServerFromJSON(json['server']),
    };
}

export function PostFhirServers200ResponseToJSON(json: any): PostFhirServers200Response {
    return PostFhirServers200ResponseToJSONTyped(json, false);
}

export function PostFhirServers200ResponseToJSONTyped(value?: PostFhirServers200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'server': FhirServerToJSON(value['server']),
    };
}

