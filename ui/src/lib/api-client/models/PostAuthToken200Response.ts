/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostAuthToken200ResponseAuthorizationDetailsInner } from './PostAuthToken200ResponseAuthorizationDetailsInner';
import {
    PostAuthToken200ResponseAuthorizationDetailsInnerFromJSON,
    PostAuthToken200ResponseAuthorizationDetailsInnerFromJSONTyped,
    PostAuthToken200ResponseAuthorizationDetailsInnerToJSON,
    PostAuthToken200ResponseAuthorizationDetailsInnerToJSONTyped,
} from './PostAuthToken200ResponseAuthorizationDetailsInner';
import type { PostAuthToken200ResponseFhirContextInner } from './PostAuthToken200ResponseFhirContextInner';
import {
    PostAuthToken200ResponseFhirContextInnerFromJSON,
    PostAuthToken200ResponseFhirContextInnerFromJSONTyped,
    PostAuthToken200ResponseFhirContextInnerToJSON,
    PostAuthToken200ResponseFhirContextInnerToJSONTyped,
} from './PostAuthToken200ResponseFhirContextInner';

/**
 * 
 * @export
 * @interface PostAuthToken200Response
 */
export interface PostAuthToken200Response {
    /**
     * JWT access token
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    accessToken?: string;
    /**
     * Token type (Bearer)
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    tokenType?: string;
    /**
     * Token expiration time in seconds
     * @type {number}
     * @memberof PostAuthToken200Response
     */
    expiresIn?: number;
    /**
     * Refresh token
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    refreshToken?: string;
    /**
     * Refresh token expiration time in seconds
     * @type {number}
     * @memberof PostAuthToken200Response
     */
    refreshExpiresIn?: number;
    /**
     * OpenID Connect ID token
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    idToken?: string;
    /**
     * Granted scopes
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    scope?: string;
    /**
     * Keycloak session state
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    sessionState?: string;
    /**
     * Not before policy timestamp
     * @type {number}
     * @memberof PostAuthToken200Response
     */
    notBeforePolicy?: number;
    /**
     * Patient in context (e.g., Patient/123)
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    patient?: string;
    /**
     * Encounter in context (e.g., Encounter/456)
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    encounter?: string;
    /**
     * FHIR user resource (e.g., Practitioner/789)
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    fhirUser?: string;
    /**
     * Additional FHIR resources in context
     * @type {Array<PostAuthToken200ResponseFhirContextInner>}
     * @memberof PostAuthToken200Response
     */
    fhirContext?: Array<PostAuthToken200ResponseFhirContextInner>;
    /**
     * Launch intent (e.g., reconcile-medications)
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    intent?: string;
    /**
     * URL to CSS stylesheet for styling
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    smartStyleUrl?: string;
    /**
     * Tenant identifier
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    tenant?: string;
    /**
     * Whether patient banner is required
     * @type {boolean}
     * @memberof PostAuthToken200Response
     */
    needPatientBanner?: boolean;
    /**
     * Authorization details for multiple FHIR servers
     * @type {Array<PostAuthToken200ResponseAuthorizationDetailsInner>}
     * @memberof PostAuthToken200Response
     */
    authorizationDetails?: Array<PostAuthToken200ResponseAuthorizationDetailsInner>;
    /**
     * Error code if request failed
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    error?: string;
    /**
     * Error description if request failed
     * @type {string}
     * @memberof PostAuthToken200Response
     */
    errorDescription?: string;
}

/**
 * Check if a given object implements the PostAuthToken200Response interface.
 */
export function instanceOfPostAuthToken200Response(value: object): value is PostAuthToken200Response {
    return true;
}

export function PostAuthToken200ResponseFromJSON(json: any): PostAuthToken200Response {
    return PostAuthToken200ResponseFromJSONTyped(json, false);
}

export function PostAuthToken200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAuthToken200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'accessToken': json['access_token'] == null ? undefined : json['access_token'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
        'expiresIn': json['expires_in'] == null ? undefined : json['expires_in'],
        'refreshToken': json['refresh_token'] == null ? undefined : json['refresh_token'],
        'refreshExpiresIn': json['refresh_expires_in'] == null ? undefined : json['refresh_expires_in'],
        'idToken': json['id_token'] == null ? undefined : json['id_token'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'sessionState': json['session_state'] == null ? undefined : json['session_state'],
        'notBeforePolicy': json['not-before-policy'] == null ? undefined : json['not-before-policy'],
        'patient': json['patient'] == null ? undefined : json['patient'],
        'encounter': json['encounter'] == null ? undefined : json['encounter'],
        'fhirUser': json['fhirUser'] == null ? undefined : json['fhirUser'],
        'fhirContext': json['fhirContext'] == null ? undefined : ((json['fhirContext'] as Array<any>).map(PostAuthToken200ResponseFhirContextInnerFromJSON)),
        'intent': json['intent'] == null ? undefined : json['intent'],
        'smartStyleUrl': json['smart_style_url'] == null ? undefined : json['smart_style_url'],
        'tenant': json['tenant'] == null ? undefined : json['tenant'],
        'needPatientBanner': json['need_patient_banner'] == null ? undefined : json['need_patient_banner'],
        'authorizationDetails': json['authorization_details'] == null ? undefined : ((json['authorization_details'] as Array<any>).map(PostAuthToken200ResponseAuthorizationDetailsInnerFromJSON)),
        'error': json['error'] == null ? undefined : json['error'],
        'errorDescription': json['error_description'] == null ? undefined : json['error_description'],
    };
}

export function PostAuthToken200ResponseToJSON(json: any): PostAuthToken200Response {
    return PostAuthToken200ResponseToJSONTyped(json, false);
}

export function PostAuthToken200ResponseToJSONTyped(value?: PostAuthToken200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_token': value['accessToken'],
        'token_type': value['tokenType'],
        'expires_in': value['expiresIn'],
        'refresh_token': value['refreshToken'],
        'refresh_expires_in': value['refreshExpiresIn'],
        'id_token': value['idToken'],
        'scope': value['scope'],
        'session_state': value['sessionState'],
        'not-before-policy': value['notBeforePolicy'],
        'patient': value['patient'],
        'encounter': value['encounter'],
        'fhirUser': value['fhirUser'],
        'fhirContext': value['fhirContext'] == null ? undefined : ((value['fhirContext'] as Array<any>).map(PostAuthToken200ResponseFhirContextInnerToJSON)),
        'intent': value['intent'],
        'smart_style_url': value['smartStyleUrl'],
        'tenant': value['tenant'],
        'need_patient_banner': value['needPatientBanner'],
        'authorization_details': value['authorizationDetails'] == null ? undefined : ((value['authorizationDetails'] as Array<any>).map(PostAuthToken200ResponseAuthorizationDetailsInnerToJSON)),
        'error': value['error'],
        'error_description': value['errorDescription'],
    };
}

