/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAdminKeycloakConfigTestRequest
 */
export interface PostAdminKeycloakConfigTestRequest {
    /**
     * Keycloak base URL (e.g., http://localhost:8080)
     * @type {string}
     * @memberof PostAdminKeycloakConfigTestRequest
     */
    baseUrl: string;
    /**
     * Keycloak realm name
     * @type {string}
     * @memberof PostAdminKeycloakConfigTestRequest
     */
    realm: string;
}

/**
 * Check if a given object implements the PostAdminKeycloakConfigTestRequest interface.
 */
export function instanceOfPostAdminKeycloakConfigTestRequest(value: object): value is PostAdminKeycloakConfigTestRequest {
    if (!('baseUrl' in value) || value['baseUrl'] === undefined) return false;
    if (!('realm' in value) || value['realm'] === undefined) return false;
    return true;
}

export function PostAdminKeycloakConfigTestRequestFromJSON(json: any): PostAdminKeycloakConfigTestRequest {
    return PostAdminKeycloakConfigTestRequestFromJSONTyped(json, false);
}

export function PostAdminKeycloakConfigTestRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAdminKeycloakConfigTestRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'baseUrl': json['baseUrl'],
        'realm': json['realm'],
    };
}

export function PostAdminKeycloakConfigTestRequestToJSON(json: any): PostAdminKeycloakConfigTestRequest {
    return PostAdminKeycloakConfigTestRequestToJSONTyped(json, false);
}

export function PostAdminKeycloakConfigTestRequestToJSONTyped(value?: PostAdminKeycloakConfigTestRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'baseUrl': value['baseUrl'],
        'realm': value['realm'],
    };
}

