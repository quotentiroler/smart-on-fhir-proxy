/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetMonitoringOauthEvents200ResponseEventsInner } from './GetMonitoringOauthEvents200ResponseEventsInner';
import {
    GetMonitoringOauthEvents200ResponseEventsInnerFromJSON,
    GetMonitoringOauthEvents200ResponseEventsInnerFromJSONTyped,
    GetMonitoringOauthEvents200ResponseEventsInnerToJSON,
    GetMonitoringOauthEvents200ResponseEventsInnerToJSONTyped,
} from './GetMonitoringOauthEvents200ResponseEventsInner';

/**
 * 
 * @export
 * @interface GetMonitoringOauthEvents200Response
 */
export interface GetMonitoringOauthEvents200Response {
    /**
     * 
     * @type {Array<GetMonitoringOauthEvents200ResponseEventsInner>}
     * @memberof GetMonitoringOauthEvents200Response
     */
    events: Array<GetMonitoringOauthEvents200ResponseEventsInner>;
    /**
     * 
     * @type {number}
     * @memberof GetMonitoringOauthEvents200Response
     */
    total: number;
    /**
     * 
     * @type {string}
     * @memberof GetMonitoringOauthEvents200Response
     */
    timestamp: string;
}

/**
 * Check if a given object implements the GetMonitoringOauthEvents200Response interface.
 */
export function instanceOfGetMonitoringOauthEvents200Response(value: object): value is GetMonitoringOauthEvents200Response {
    if (!('events' in value) || value['events'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function GetMonitoringOauthEvents200ResponseFromJSON(json: any): GetMonitoringOauthEvents200Response {
    return GetMonitoringOauthEvents200ResponseFromJSONTyped(json, false);
}

export function GetMonitoringOauthEvents200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMonitoringOauthEvents200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'events': ((json['events'] as Array<any>).map(GetMonitoringOauthEvents200ResponseEventsInnerFromJSON)),
        'total': json['total'],
        'timestamp': json['timestamp'],
    };
}

export function GetMonitoringOauthEvents200ResponseToJSON(json: any): GetMonitoringOauthEvents200Response {
    return GetMonitoringOauthEvents200ResponseToJSONTyped(json, false);
}

export function GetMonitoringOauthEvents200ResponseToJSONTyped(value?: GetMonitoringOauthEvents200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'events': ((value['events'] as Array<any>).map(GetMonitoringOauthEvents200ResponseEventsInnerToJSON)),
        'total': value['total'],
        'timestamp': value['timestamp'],
    };
}

