/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202508151735.a205e19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetFhirServers200ResponseServersInner } from './GetFhirServers200ResponseServersInner';
import {
    GetFhirServers200ResponseServersInnerFromJSON,
    GetFhirServers200ResponseServersInnerFromJSONTyped,
    GetFhirServers200ResponseServersInnerToJSON,
    GetFhirServers200ResponseServersInnerToJSONTyped,
} from './GetFhirServers200ResponseServersInner';

/**
 * 
 * @export
 * @interface GetFhirServers200Response
 */
export interface GetFhirServers200Response {
    /**
     * Total number of configured FHIR servers
     * @type {number}
     * @memberof GetFhirServers200Response
     */
    totalServers: number;
    /**
     * 
     * @type {Array<GetFhirServers200ResponseServersInner>}
     * @memberof GetFhirServers200Response
     */
    servers: Array<GetFhirServers200ResponseServersInner>;
}

/**
 * Check if a given object implements the GetFhirServers200Response interface.
 */
export function instanceOfGetFhirServers200Response(value: object): value is GetFhirServers200Response {
    if (!('totalServers' in value) || value['totalServers'] === undefined) return false;
    if (!('servers' in value) || value['servers'] === undefined) return false;
    return true;
}

export function GetFhirServers200ResponseFromJSON(json: any): GetFhirServers200Response {
    return GetFhirServers200ResponseFromJSONTyped(json, false);
}

export function GetFhirServers200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetFhirServers200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'totalServers': json['totalServers'],
        'servers': ((json['servers'] as Array<any>).map(GetFhirServers200ResponseServersInnerFromJSON)),
    };
}

export function GetFhirServers200ResponseToJSON(json: any): GetFhirServers200Response {
    return GetFhirServers200ResponseToJSONTyped(json, false);
}

export function GetFhirServers200ResponseToJSONTyped(value?: GetFhirServers200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalServers': value['totalServers'],
        'servers': ((value['servers'] as Array<any>).map(GetFhirServers200ResponseServersInnerToJSON)),
    };
}

