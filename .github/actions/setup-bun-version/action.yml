name: 'Setup Bun with Version Scripts'
description: 'Checkout code, setup Node.js and Bun with caching, and prepare version management'

inputs:
  node-version:
    description: 'Node.js version to setup'
    required: false
    default: '22'
  bun-version:
    description: 'Bun version to setup'
    required: false
    default: '1.2.19'
  fetch-depth:
    description: 'Checkout fetch depth'
    required: false
    default: '0'
  checkout:
    description: 'Whether to checkout code'
    required: false
    default: 'true'
  token:
    description: 'GitHub token for checkout'
    required: false
    default: ${{ github.token }}
  ref:
    description: 'Branch or ref to checkout'
    required: false

runs:
  using: 'composite'
  steps:
  - name: Checkout code
    if: inputs.checkout == 'true'
    uses: actions/checkout@v4
    with:
      fetch-depth: ${{ inputs.fetch-depth }}
      token: ${{ inputs.token }}
      ref: ${{ inputs.ref }}

  - name: Setup Node.js
    uses: actions/setup-node@v4
    with:
      node-version: ${{ inputs.node-version }}

  - name: Cache Bun binary
    id: cache-bun
    uses: actions/cache@v4
    with:
      path: ~/.bun
      key: ${{ runner.os }}-bun-binary-${{ inputs.bun-version }}
      restore-keys: |
        ${{ runner.os }}-bun-binary-

  - name: Setup Bun
    uses: oven-sh/setup-bun@v2
    with:
      bun-version: ${{ inputs.bun-version }}

  - name: Cache Bun dependencies
    uses: actions/cache@v4
    with:
      path: |
        backend/node_modules
        ui/node_modules
        node_modules
        ~/.bun/install/cache
        ~/.cache/bunx
        ~/.local/share/bunx
      key: ${{ runner.os }}-bun-deps-${{ hashFiles('**/bun.lock', '**/package.json') }}
      restore-keys: |
        ${{ runner.os }}-bun-deps-
