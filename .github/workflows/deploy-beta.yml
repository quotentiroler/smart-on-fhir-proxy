name: Deploy Beta

on:
  workflow_call:
    inputs:
      app_version:
        description: 'Version of the application to deploy'
        required: true
        type: string
      source_branch:
        description: 'Source branch for deployment'
        required: true
        type: string
    outputs:
      fhir_server_url:
        description: "FHIR server URL after deployment"
        value: ${{ jobs.deploy.outputs.fhir_server_url }}
      keycloak_url:
        description: "Keycloak URL after deployment"
        value: ${{ jobs.deploy.outputs.keycloak_url }}
      app_url:
        description: "Main application URL after deployment"
        value: ${{ jobs.deploy.outputs.app_url }}
      deployment_status:
        description: "Status of the deployment"
        value: ${{ jobs.deploy.outputs.deployment_status }}
      deployment_target:
        description: "Target platform where app was deployed"
        value: ${{ jobs.deploy.outputs.deployment_target }}
    secrets:
      VPS_SSH_KEY:
        required: true
      VPS_HOST:
        required: true
      VPS_USER:
        required: true

jobs:
  deploy:
    name: Deploy Beta (VPS)
    runs-on: ubuntu-latest
    outputs:
      fhir_server_url: ${{ steps.deploy.outputs.fhir_server_url }}
      keycloak_url: ${{ steps.deploy.outputs.keycloak_url }}
      app_url: ${{ steps.deploy.outputs.app_url }}
      deployment_status: ${{ steps.deploy.outputs.deployment_status }}
      deployment_target: ${{ steps.deploy.outputs.deployment_target }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source_branch }}
      
      - name: Setup Bun
        uses: ./.github/actions/setup-bun-version
      
      - name: Deploy Beta (VPS)
        id: deploy
        run: |
          echo "🚀 Deploying Beta version ${{ inputs.app_version }} to VPS..."
          
          # Setup SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
          
          # Create deployment script
          cat > deploy-to-vps.sh << 'EOF'
          #!/bin/bash
          set -e
          
          echo "📦 Updating application on VPS..."
          
          # Navigate to application directory
          cd /opt/proxy-smart-beta
          
          # Pull latest changes
          git fetch origin
          git checkout ${{ inputs.source_branch }}
          git pull origin ${{ inputs.source_branch }}
          
          # Install dependencies and build
          bun install --frozen-lockfile
          cd backend
          bun install --frozen-lockfile
          bun run build
          cd ..
          
          # Update environment variables
          cat > backend/.env << ENVEOF
          NODE_ENV=beta
          VERSION=${{ inputs.app_version }}
          BASE_URL=https://beta.proxy-smart.your-domain.com
          PORT=3002
          FHIR_SERVER_BASE=https://hapi.fhir.org/baseR4
          KEYCLOAK_BASE_URL=https://auth-beta.proxy-smart.your-domain.com
          KEYCLOAK_REALM=proxy-smart
          DATABASE_URL=postgresql://proxyuser:secure_password@localhost:5432/proxy_smart_beta
          ENVEOF
          
          # Restart services
          sudo systemctl restart proxy-smart-beta
          sudo systemctl restart nginx
          
          # Wait for service to be ready
          sleep 10
          
          echo "✅ Beta deployment completed"
          EOF
          
          # Execute deployment script on VPS
          scp deploy-to-vps.sh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "chmod +x /tmp/deploy-to-vps.sh && /tmp/deploy-to-vps.sh"
          
          # Test deployment
          VPS_URL="https://beta.proxy-smart.com"
          
          # Wait for deployment to be ready
          echo "⏳ Waiting for VPS deployment to be ready..."
          timeout 300s bash -c "until curl -f $VPS_URL/health; do sleep 10; done"
          
          # Set outputs
          echo "fhir_server_url=$VPS_URL/proxy-smart-backend/hapi-fhir-server/R4" >> $GITHUB_OUTPUT
          echo "keycloak_url=https://auth-beta.proxy-smart.your-domain.com" >> $GITHUB_OUTPUT
          echo "app_url=$VPS_URL" >> $GITHUB_OUTPUT
          echo "deployment_status=success" >> $GITHUB_OUTPUT
          echo "deployment_target=vps" >> $GITHUB_OUTPUT
          
          echo "✅ Beta deployment completed successfully"
          echo "📍 App: $VPS_URL"
          echo "📍 FHIR Server (Proxied): $VPS_URL/proxy-smart-backend/hapi-fhir-server/R4"
          echo "📍 Keycloak: https://auth-beta.proxy-smart.your-domain.com"
